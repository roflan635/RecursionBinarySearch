// Task.cpp : Определяет функции для статической библиотеки.
//

#include "pch.h"
#include "Task.h"
#include "algorithm"
int FindElement(int* arr, int size, int value, int index)
{
	if (value < 0) return -1;
	if (arr[index] == value) return index;
	else FindElement(arr, size, value, index + 1);
}
int RecursionBinarySearch(int* arr, int size, int value)
{
	if (size == 0 || arr == nullptr) return -1;
	int index = 0;
	FindElement(arr, size, value, index);
}
/*
Создайте РЕКУРСИВНУЮ функцию, которая ищет в сортированном по возрастанию целочисленном массиве 
указанное число и возвращает индекс первого элемента, относительно начала массива, который равен 
заданному числу. Нумерация элементов начинается с 0.

1. Функция должна иметь имя RecursionBinarySearch
2. Функция в качестве параметров должна принимать следующее:
	- первый параметр - указатель на сортированный массив
	- второй параметр - количество элементов массива
	- третий параметр - искомое значение

3. Функция должна возвращать индекс первого элемента, относительно начала массива, который равен
	заданному числу. Если число не найдено, необходимо вернуть -1.
	Тип возвращаемого результата - int.

	!!!!! ВАЖНО !!!!!
	В данном файле разрешается разместить кроме кода требуемой функции - код любых других вспомогательных
	функций. Никакой функции main() в этом файле быть не должно.
	Если вы хотите испытать и отладить вашу функцию - пишите код в файле Example.cpp проекта Example данного решения
	Для этого задайте в качестве запускаемого проекта проект Example.

	ДЛЯ АВТОМАТИЧЕСКОГО ТЕСТИРОВАНИЯ  проверки правильности работы вашего задания - сделайте запукаемым проект
	Tests и запустите его. Если функция написана правильно - все тесты должны успешно выполниться
	(зеленый цвет в консоли). Если ваша функция работает некорректно - в консоли будут сообщения красным цветом
*/
